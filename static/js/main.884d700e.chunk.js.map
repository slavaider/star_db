{"version":3,"sources":["components/header/index.js","components/header/header.js","services/swapi.js","components/spinner/index.js","components/spinner/spinner.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/item-list/item-list.js","components/item-list/index.js","components/starship-details/starship-details.js","components/person-details/index.js","components/person-details/person-details.js","components/planet-details/planet-details.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","className","exact","to","href","SwapiService","_apiUrl","getResource","url","a","fetch","response","ok","Error","status","json","getData","data_type","id","data","_transformPeople","result","properties","_transformPlanet","_transformStarship","dataTransform","results","map","data_obj","uid","name","getAllData","array","push","next","_extractId","gender","birth_year","eye_color","model","manufacturer","cost_in_credits","length","crew","passengers","cargo_capacity","population","rotation_period","diameter","item","match","Spinner","RandomPlanet","swapi","state","planet","loading","error","interval","onError","setState","updatePlanet","Math","floor","random","then","catch","this","setInterval","clearInterval","hasData","errorMessage","toString","spinner","content","Component","PlanetView","Fragment","alt","src","ItemList","items","index","step","max","updateItems","props","path","sort","b","ceil","Choose","history","changePage","event","target","value","Prev","prev_state","Next","prevProps","i","pages","join","onClick","slice","obj","Pagination","withRouter","StarShipDetails","starship","params","updateShip","style","display","PersonDetails","person","updatePerson","PlanetDetails","App","component","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qXAEeA,ECGA,WACX,OACI,sBAAKC,UAAU,gBAAf,UACI,6BACI,cAAC,IAAD,CAASC,OAAK,EAACC,GAAE,YAAjB,uBAIJ,qBAAIF,UAAU,SAAd,UACI,6BACI,cAAC,IAAD,CAASC,OAAK,EAACC,GAAE,YAAjB,sBAIJ,6BACI,cAAC,IAAD,CAASD,OAAK,EAACC,GAAE,aAAjB,uBAIJ,6BACI,cAAC,IAAD,CAASD,OAAK,EAACC,GAAE,eAAjB,yBAIJ,6BACI,oBAAGC,KAAK,+BAAR,UACI,mBAAGH,UAAU,iBADjB,6B,sEC9BCI,E,4DAEjBC,QAAU,6B,KAEVC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACaC,MAAMF,GADnB,WACJG,EADI,QAEIC,GAFJ,sBAGA,IAAIC,MAAJ,0BAA6BL,EAA7B,mCAA2DG,EAASG,SAHpE,uBAKGH,EAASI,OALZ,mF,2DAWdC,Q,uCAAU,WAAOC,EAAWC,GAAlB,eAAAT,EAAA,sEACa,EAAKF,YAAL,UAAoB,EAAKD,QAAzB,YAAoCW,EAApC,YAAiDC,EAAjD,MADb,OACAC,EADA,YAEEF,EAFF,OAGG,WAHH,OAKG,YALH,OAOG,cAPH,+CAIS,EAAKG,iBAAiBD,EAAKE,OAAOC,aAJ3C,gCAMS,EAAKC,iBAAiBJ,EAAKE,OAAOC,aAN3C,gCAQS,EAAKE,mBAAmBL,EAAKE,OAAOC,aAR7C,gCAUS,MAVT,4C,6DAeVG,cAAgB,SAACR,EAAWE,GACxB,OAAOA,EAAKO,QAAQC,KAAI,SAAAC,GACpB,OAAQX,GACJ,IAAK,SAEL,IAAK,UAEL,IAAK,YACD,MAAO,CAACC,GAAIU,EAASC,IAAKC,KAAMF,EAASE,MAC7C,QACI,OAAO,U,KAQvBC,W,uCAAa,WAAOd,GAAP,iBAAAR,EAAA,6DACHuB,EAAQ,GADL,SAEQ,EAAKzB,YAAL,UAAoB,EAAKD,QAAzB,YAAoCW,EAApC,MAFR,OAELE,EAFK,OAGTa,EAAMC,KAAN,MAAAD,EAAK,YAAS,EAAKP,cAAcR,EAAWE,KAHnC,WAIAA,EAAKe,KAJL,iCAKQ,EAAK3B,YAAYY,EAAKe,MAL9B,OAKLf,EALK,OAMLa,EAAMC,KAAN,MAAAD,EAAK,YAAS,EAAKP,cAAcR,EAAWE,KANvC,gDAQFa,GARE,4C,2DAgBbZ,iBAAmB,SAACD,GAChB,OAAIA,EACO,CACHD,GAAI,EAAKiB,WAAWhB,GACpBW,KAAMX,EAAKW,KACXM,OAAQjB,EAAKiB,OACbC,WAAYlB,EAAKkB,WACjBC,UAAWnB,EAAKmB,WAEjB,I,KAEXd,mBAAqB,SAACL,GAClB,OAAIA,EACO,CACHD,GAAI,EAAKiB,WAAWhB,GACpBW,KAAMX,EAAKW,KACXS,MAAOpB,EAAKoB,MACZC,aAAcrB,EAAKqB,aACnBC,gBAAiBtB,EAAKsB,gBACtBC,OAAQvB,EAAKuB,OACbC,KAAMxB,EAAKwB,KACXC,WAAYzB,EAAKyB,WACjBC,eAAgB1B,EAAK0B,gBAEtB,I,KAEXtB,iBAAmB,SAACJ,GAChB,OAAIA,EACO,CACHD,GAAI,EAAKiB,WAAWhB,GACpBW,KAAMX,EAAKW,KACXgB,WAAY3B,EAAK2B,WACjBC,gBAAiB5B,EAAK4B,gBACtBC,SAAU7B,EAAK6B,UAEhB,I,uDAxCAC,GAEP,OAAOA,EAAKzC,IAAI0C,MADF,aACe,O,KC3DtBC,G,MCEC,WACZ,OACI,qBAAKlD,UAAU,UAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,wBACA,+BCHKmD,E,4MACjBC,MAAQ,IAAIhD,E,EACZiD,MAAQ,CACJC,OAAQ,GACRC,SAAS,EACTC,MAAO,GACPC,SAAU,M,EAadC,QAAU,SAACF,GACP,EAAKG,SAAS,CAACH,QAAOD,SAAS,K,EAEnCK,aAAe,WACX,IAAM3C,EAAK4C,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,EAC5C,EAAKX,MAAMrC,QAAQ,UAAWE,GAAI+C,MAAK,SAAA9C,GACnC,EAAKyC,SAAS,CAACL,OAAQpC,EAAMqC,SAAS,OACvCU,MAAM,EAAKP,U,kEAhBdQ,KAAKN,eACLM,KAAKP,SAAS,CAACF,SAAUU,YAAYD,KAAKN,aAAc,S,6CAGpC,IACbH,EAAYS,KAAKb,MAAjBI,SACPW,cAAcX,K,+BAaR,IAAD,EAC4BS,KAAKb,MAA/BC,EADF,EACEA,OAAQE,EADV,EACUA,MAAOD,EADjB,EACiBA,QAChBc,IAAYd,GAAaC,GACzBc,EAAed,EAAQA,EAAMe,WAAa,KAC1CC,EAAUjB,EAAU,cAAC,EAAD,IAAa,KACjCkB,EAAUJ,EAAU,cAAC,EAAD,CAAYf,OAAQA,IAAY,KAC1D,OACI,sBAAKtD,UAAU,kCAAf,UACKsE,EACAE,EACAC,S,GAvCyBC,aA6CpCC,EAAa,SAAC,GAAc,IAAbrB,EAAY,EAAZA,OAEbrC,EAEAqC,EAFArC,GAAIY,EAEJyB,EAFIzB,KAAMgB,EAEVS,EAFUT,WACVC,EACAQ,EADAR,gBAAiBC,EACjBO,EADiBP,SAGrB,OACI,eAAC,IAAM6B,SAAP,WACI,qBAAKC,IAAI,MAAM7E,UAAU,eACpB8E,IAAG,8DAAyD7D,EAAzD,UACR,gCACI,6BAAKY,IACL,qBAAI7B,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,wBACA,+BAAO6C,OAEX,qBAAI7C,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,6BACA,+BAAO8C,OAEX,qBAAI9C,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,sBACA,+BAAO+C,iBCxEhBI,I,eCKT4B,E,4MACF3B,MAAQ,IAAIhD,E,EACZiD,MAAQ,CACJ2B,MAAO,GACPzB,SAAS,EACT0B,MAAO,EACPC,KAAM,GACNC,IAAK,M,EAETC,YAAc,WACV,EAAKzB,SAAS,CAACJ,SAAS,IACxB,EAAKH,MAAMtB,WAAW,EAAKuD,MAAMpC,MAAMqC,KAAKrC,MAAM,gBAAgB,IAAIe,MAAK,SAAA9C,GACvE,EAAKyC,SAAS,CACVsB,MAAO,EACPD,MAAO9D,EAAKqE,MAAK,SAAC/E,EAAGgF,GAAJ,OAAUhF,EAAES,GAAKuE,EAAEvE,MACpCsC,SAAS,EACT4B,IAAKtB,KAAK4B,KAAKvE,EAAKuB,OAAS,EAAKY,MAAM6B,Y,EAepDQ,OAAS,SAACzE,GACN,EAAKoE,MAAMM,QAAQ3D,KAAnB,WAA4B,EAAKqD,MAAMpC,MAAMqC,KAAKrC,MAAM,gBAAgB,GAAxE,YAA8EhC,K,EAElF2E,WAAa,SAACC,GACV,EAAKlC,SAAS,CACVsB,MAAOY,EAAMC,OAAOC,MAAQ,K,EAGpCC,KAAO,WACsB,IAArB,EAAK3C,MAAM4B,OACX,EAAKtB,UAAS,SAACsC,GACX,MAAO,CACHhB,MAAOgB,EAAWhB,MAAQ,O,EAK1CiB,KAAO,WACC,EAAK7C,MAAM4B,QAAU,EAAK5B,MAAM8B,IAAM,GACtC,EAAKxB,UAAS,SAACsC,GACX,MAAO,CACHhB,MAAOgB,EAAWhB,MAAQ,O,iEA/BvBkB,GACXjC,KAAKmB,MAAMpC,MAAMqC,OAASa,EAAUlD,MAAMqC,MAC1CpB,KAAKkB,gB,0CAKTlB,KAAKkB,gB,mCAiCL,IAHU,IAAD,OACLgB,EAAI,EACFC,EAAQ,GACPD,EAAIlC,KAAKb,MAAM8B,KAClBiB,IACAC,EAAMrE,KACF,oBAAYhC,UAAW,CAAC,YAAakE,KAAKb,MAAM4B,QAAUmB,EAAI,EAAI,SAAW,MAAME,KAAK,KAAxF,SACI,wBAAQtG,UAAU,YACV+F,MAAOK,EACPG,QAAS,SAACV,GAAD,OAAW,EAAKD,WAAWC,IAF5C,SAEqDO,KAHhDA,IAOjB,MAAM,GAAN,OAAWC,K,+BAGL,IAAD,OACL,OACI,qBAAKrG,UAAU,WAAf,SACI,oBAAIA,UAAU,uBAAd,SACMkE,KAAKb,MAAME,QAsBW,cAAC,EAAD,IArBpB,eAAC,IAAMqB,SAAP,WACKV,KAAKb,MAAM2B,MACPwB,MAAMtC,KAAKb,MAAM4B,MAAQf,KAAKb,MAAM6B,MAAOhB,KAAKb,MAAM4B,MAAQ,GAAKf,KAAKb,MAAM6B,MAC9ExD,KAAI,SAAC+E,GACF,OACI,qBACIF,QAAS,kBAAM,EAAKb,OAAOe,EAAIxF,KAC/BjB,UAAU,kBAFd,iBAGSyG,EAAIxF,GAHb,KAGmBwF,EAAI5E,OAHd4E,EAAIxF,OAOzB,qBAAIjB,UAAU,4DAAd,UACI,oBAAIA,UAAU,YAAd,SACI,wBAAQuG,QAAS,kBAAM,EAAKP,QAAQhG,UAAU,YAA9C,iBAEHkE,KAAKwC,aACN,oBAAI1G,UAAU,YAAd,SACI,wBAAQuG,QAAS,kBAAM,EAAKL,QAAQlG,UAAU,YAA9C,+B,GAjGb0E,aCLRK,EDgHA4B,YAAW5B,GE5GL6B,G,wNACjBxD,MAAQ,IAAIhD,E,EAEZiD,MAAQ,CACJwD,SAAU,GACVtD,SAAS,G,2DAGC,IAAD,OACTW,KAAKP,SAAS,CAACJ,SAAS,IACxBW,KAAKd,MAAMrC,QAAQ,YAAamD,KAAKmB,MAAMpC,MAAM6D,OAAO7F,IAAI+C,MAAK,SAAC9C,GAC9D,EAAKyC,SAAS,CAACkD,SAAU3F,EAAMqC,SAAS,S,yCAI7B4C,GACXjC,KAAKmB,MAAMpC,MAAM6D,OAAO7F,KAAOkF,EAAUlD,MAAM6D,OAAO7F,IACtDiD,KAAK6C,e,0CAKT7C,KAAK6C,e,+BAIC,IAAD,EAYD7C,KAAKb,MAVLwD,SACIhF,EAHH,EAGGA,KACAS,EAJH,EAIGA,MACAC,EALH,EAKGA,aACAC,EANH,EAMGA,gBACAC,EAPH,EAOGA,OACAC,EARH,EAQGA,KACAC,EATH,EASGA,WACAC,EAVH,EAUGA,eAGR,OACQ,qBAAK5C,UAAU,wBAAf,SACMkE,KAAKb,MAAME,QAuCW,cAAC,EAAD,IAtCpB,eAAC,IAAMqB,SAAP,WACI,qBAAK5E,UAAU,iBACV8E,IAAG,gEAA2DZ,KAAKmB,MAAMpC,MAAM6D,OAAO7F,GAAnF,QACHyC,QAAS,SAACmC,GAAD,OAAWA,EAAMC,OAAOkB,MAAMC,QAAU,QACjDpC,IAAI,4BACT,sBAAK7E,UAAU,YAAf,UACI,6BAAK6B,IACL,qBAAI7B,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,mBACA,+BAAOsC,OAEX,qBAAItC,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,0BACA,+BAAOuC,OAEX,qBAAIvC,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,6BACA,+BAAOwC,OAEX,qBAAIxC,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,oBACA,+BAAOyC,OAEX,qBAAIzC,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,kBACA,+BAAO0C,OAEX,qBAAI1C,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,wBACA,+BAAO2C,OAEX,qBAAI3C,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,4BACA,+BAAO4C,sB,GA5EF8B,cCJ9BwC,G,kNCKX9D,MAAQ,IAAIhD,E,EAEZiD,MAAQ,CACJ8D,OAAQ,GACR5D,SAAS,G,6DAGG,IAAD,OACXW,KAAKP,SAAS,CAACJ,SAAS,IACxBW,KAAKd,MAAMrC,QAAQ,SAAUmD,KAAKmB,MAAMpC,MAAM6D,OAAO7F,IAAI+C,MAAK,SAAC9C,GAC3D,EAAKyC,SAAS,CAACwD,OAAQjG,EAAMqC,SAAS,S,yCAI3B4C,GACXjC,KAAKmB,MAAMpC,MAAM6D,OAAO7F,KAAOkF,EAAUlD,MAAM6D,OAAO7F,IACtDiD,KAAKkD,iB,0CAKTlD,KAAKkD,iB,+BAGC,IAAD,EAQDlD,KAAKb,MANL8D,OACItF,EAHH,EAGGA,KACAM,EAJH,EAIGA,OACAC,EALH,EAKGA,WACAC,EANH,EAMGA,UAGR,OACQ,qBAAKrC,UAAU,sBAAf,SACMkE,KAAKb,MAAME,QAuBW,cAAC,EAAD,IAtBpB,eAAC,IAAMqB,SAAP,WACI,qBAAK5E,UAAU,eACV8E,IAAG,iEAA4DZ,KAAKmB,MAAMpC,MAAM6D,OAAO7F,GAApF,QACHyC,QAAS,SAACmC,GAAD,OAAWA,EAAMC,OAAOkB,MAAMC,QAAU,QACjDpC,IAAI,0BACT,sBAAK7E,UAAU,YAAf,UACI,6BAAK6B,IACL,qBAAI7B,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,oBACA,+BAAOmC,OAEX,qBAAInC,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,wBACA,+BAAOoC,OAEX,qBAAIpC,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,uBACA,+BAAOqC,sB,GAvDJqC,cCAtB2C,G,kNACjBjE,MAAQ,IAAIhD,E,EAEZiD,MAAQ,CACJC,OAAQ,GACRC,SAAS,G,6DAGG,IAAD,OACXW,KAAKP,SAAS,CAACJ,SAAS,IACxBW,KAAKd,MAAMrC,QAAQ,UAAWmD,KAAKmB,MAAMpC,MAAM6D,OAAO7F,IAAI+C,MAAK,SAAC9C,GAC5D,EAAKyC,SAAS,CAACL,OAAQpC,EAAMqC,SAAS,S,yCAI3B4C,GACXjC,KAAKmB,MAAMpC,MAAM6D,OAAO7F,KAAOkF,EAAUlD,MAAM6D,OAAO7F,IACtDiD,KAAKN,iB,0CAKTM,KAAKN,iB,+BAIC,IAAD,EAQDM,KAAKb,MANLC,OACIzB,EAHH,EAGGA,KACAgB,EAJH,EAIGA,WACAC,EALH,EAKGA,gBACAC,EANH,EAMGA,SAGR,OACI,qBAAK/C,UAAU,sBAAf,SACMkE,KAAKb,MAAME,QAuBW,cAAC,EAAD,IAtBpB,eAAC,IAAMqB,SAAP,WACI,qBAAK5E,UAAU,eACV8E,IAAG,8DAAyDZ,KAAKmB,MAAMpC,MAAM6D,OAAO7F,GAAjF,QACHyC,QAAS,SAACmC,GAAD,OAAWA,EAAMC,OAAOkB,MAAMC,QAAU,QACjDpC,IAAI,0BACT,sBAAK7E,UAAU,YAAf,UACI,6BAAK6B,IACL,qBAAI7B,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,wBACA,+BAAO6C,OAEX,qBAAI7C,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,6BACA,+BAAO8C,OAEX,qBAAI9C,UAAU,kBAAd,UACI,sBAAMA,UAAU,OAAhB,sBACA,+BAAO+C,sB,GAxDA2B,cC8B5B4C,IClCAA,EDUf,WACI,OACI,sBAAKtH,UAAU,kBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,UAAf,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIsF,KAAM,CAAC,iBAAD,8BACNiC,UAAWxC,IACf,cAAC,IAAD,CAAUyC,KAAM,IAAKtH,GAAE,iBAE3B,qBAAKF,UAAU,WAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsF,KAAI,iBAAoBiC,UAAWX,IAC1C,cAAC,IAAD,CAAOtB,KAAI,cAAiBiC,UAAWL,IACvC,cAAC,IAAD,CAAO5B,KAAI,eAAkBiC,UAAWF,gBErBhEI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRC,SAASC,eAAe,W","file":"static/js/main.884d700e.chunk.js","sourcesContent":["import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './header.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header d-flex\">\r\n            <h3>\r\n                <NavLink exact to={`/people/1`}>\r\n                    Star DB\r\n                </NavLink>\r\n            </h3>\r\n            <ul className=\"d-flex\">\r\n                <li>\r\n                    <NavLink exact to={`/people/1`}>\r\n                        People\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink exact to={`/planets/1`}>\r\n                        Planets\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink exact to={`/starships/2`}>\r\n                        Starships\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <a href='https://github.com/slavaider'>\r\n                        <i className='fa fa-github'/>&nbsp;\r\n                        Slavaider\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","export default class SwapiService {\r\n\r\n    _apiUrl = 'https://www.swapi.tech/api'\r\n\r\n    getResource = async (url) => {\r\n        const response = await fetch(url)\r\n        if (!response.ok) {\r\n            throw new Error(`Could not fetch ${url}, received state status:${response.status}`)\r\n        }\r\n        return await response.json()\r\n    }\r\n\r\n    /**\r\n     * data_type = 'people' || 'planets' || 'starships'\r\n     */\r\n    getData = async (data_type, id) => {\r\n        const data = await this.getResource(`${this._apiUrl}/${data_type}/${id}/`)\r\n        switch (data_type) {\r\n            case 'people':\r\n                return this._transformPeople(data.result.properties);\r\n            case 'planets':\r\n                return this._transformPlanet(data.result.properties)\r\n            case 'starships':\r\n                return this._transformStarship(data.result.properties)\r\n            default:\r\n                return null\r\n        }\r\n\r\n    }\r\n\r\n    dataTransform = (data_type, data) => {\r\n        return data.results.map(data_obj => {\r\n            switch (data_type) {\r\n                case 'people':\r\n                    return {id: data_obj.uid, name: data_obj.name};\r\n                case 'planets':\r\n                    return {id: data_obj.uid, name: data_obj.name};\r\n                case 'starships':\r\n                    return {id: data_obj.uid, name: data_obj.name};\r\n                default:\r\n                    return null\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * data_type = 'people' || 'planets' || 'starships'\r\n     */\r\n    getAllData = async (data_type) => {\r\n        const array = []\r\n        let data = await this.getResource(`${this._apiUrl}/${data_type}/`)\r\n        array.push(...this.dataTransform(data_type, data))\r\n        while (!!data.next) {\r\n            data = await this.getResource(data.next)\r\n            array.push(...this.dataTransform(data_type, data))\r\n        }\r\n        return array\r\n    }\r\n\r\n    _extractId(item) {\r\n        const regex = /([1-9]*$)/\r\n        return item.url.match(regex)[1]\r\n    }\r\n\r\n    _transformPeople = (data) => {\r\n        if (data)\r\n            return {\r\n                id: this._extractId(data),\r\n                name: data.name,\r\n                gender: data.gender,\r\n                birth_year: data.birth_year,\r\n                eye_color: data.eye_color,\r\n            }\r\n        return {}\r\n    }\r\n    _transformStarship = (data) => {\r\n        if (data)\r\n            return {\r\n                id: this._extractId(data),\r\n                name: data.name,\r\n                model: data.model,\r\n                manufacturer: data.manufacturer,\r\n                cost_in_credits: data.cost_in_credits,\r\n                length: data.length,\r\n                crew: data.crew,\r\n                passengers: data.passengers,\r\n                cargo_capacity: data.cargo_capacity\r\n            }\r\n        return {}\r\n    }\r\n    _transformPlanet = (data) => {\r\n        if (data)\r\n            return {\r\n                id: this._extractId(data),\r\n                name: data.name,\r\n                population: data.population,\r\n                rotation_period: data.rotation_period,\r\n                diameter: data.diameter,\r\n            }\r\n        return {}\r\n    }\r\n}\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"lds-css\">\r\n            <div className=\"lds-double-ring\">\r\n                <div/>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n\r\n","import React, {Component} from 'react';\r\n\r\nimport './random-planet.css';\r\nimport SwapiService from \"../../services/swapi\";\r\nimport Spinner from \"../spinner\";\r\n\r\nexport default class RandomPlanet extends Component {\r\n    swapi = new SwapiService()\r\n    state = {\r\n        planet: {},\r\n        loading: true,\r\n        error: '',\r\n        interval: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePlanet()\r\n        this.setState({interval: setInterval(this.updatePlanet, 10000)})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {interval} = this.state\r\n        clearInterval(interval);\r\n    }\r\n\r\n    onError = (error) => {\r\n        this.setState({error, loading: false})\r\n    }\r\n    updatePlanet = () => {\r\n        const id = Math.floor(Math.random() * 16) + 3\r\n        this.swapi.getData('planets', id).then(data => {\r\n            this.setState({planet: data, loading: false})\r\n        }).catch(this.onError);\r\n    }\r\n\r\n    render() {\r\n        const {planet, error, loading} = this.state;\r\n        const hasData = !(loading || !!error)\r\n        const errorMessage = error ? error.toString() : null\r\n        const spinner = loading ? <Spinner/> : null\r\n        const content = hasData ? <PlanetView planet={planet}/> : null\r\n        return (\r\n            <div className=\"random-planet jumbotron rounded\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst PlanetView = ({planet}) => {\r\n    const {\r\n        id, name, population,\r\n        rotation_period, diameter\r\n    } = planet;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <img alt='img' className=\"planet-image\"\r\n                 src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}/>\r\n            <div>\r\n                <h4>{name}</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Population</span>\r\n                        <span>{population}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Rotation Period</span>\r\n                        <span>{rotation_period}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Diameter</span>\r\n                        <span>{diameter}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import RandomPlanet from './random-planet';\r\n\r\nexport default RandomPlanet;\r\n","import React, {Component} from 'react';\r\n\r\nimport './item-list.css';\r\nimport SwapiService from \"../../services/swapi\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Spinner from \"../spinner\";\r\n\r\nclass ItemList extends Component {\r\n    swapi = new SwapiService()\r\n    state = {\r\n        items: [],\r\n        loading: true,\r\n        index: 0,\r\n        step: 10,\r\n        max: null\r\n    }\r\n    updateItems = () => {\r\n        this.setState({loading: true});\r\n        this.swapi.getAllData(this.props.match.path.match(/\\/([a-z]*)\\//)[1]).then(data => {\r\n            this.setState({\r\n                index: 0,\r\n                items: data.sort((a, b) => a.id - b.id),\r\n                loading: false,\r\n                max: Math.ceil(data.length / this.state.step)\r\n            });\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.path !== prevProps.match.path) {\r\n            this.updateItems()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems()\r\n    }\r\n\r\n    Choose = (id) => {\r\n        this.props.history.push(`/${this.props.match.path.match(/\\/([a-z]*)\\//)[1]}/${id}`)\r\n    }\r\n    changePage = (event) => {\r\n        this.setState({\r\n            index: event.target.value - 1,\r\n        })\r\n    }\r\n    Prev = () => {\r\n        if (this.state.index !== 0) {\r\n            this.setState((prev_state) => {\r\n                return {\r\n                    index: prev_state.index - 1,\r\n                }\r\n            })\r\n        }\r\n    }\r\n    Next = () => {\r\n        if (this.state.index !== this.state.max - 1) {\r\n            this.setState((prev_state) => {\r\n                return {\r\n                    index: prev_state.index + 1,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    Pagination() {\r\n        let i = 0\r\n        const pages = []\r\n        while (i < this.state.max) {\r\n            i++\r\n            pages.push((\r\n                <li key={i} className={['page-item', this.state.index === i - 1 ? 'active' : null].join(' ')}>\r\n                    <button className='page-link'\r\n                            value={i}\r\n                            onClick={(event) => this.changePage(event)}>{i}</button>\r\n                </li>\r\n            ))\r\n        }\r\n        return [...pages]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                <ul className=\"item-list list-group\">\r\n                    {!this.state.loading ?\r\n                        <React.Fragment>\r\n                            {this.state.items\r\n                                .slice(this.state.index * this.state.step, (this.state.index + 1) * this.state.step)\r\n                                .map((obj) => {\r\n                                    return (\r\n                                        <li key={obj.id}\r\n                                            onClick={() => this.Choose(obj.id)}\r\n                                            className=\"list-group-item\">\r\n                                            [ID:{obj.id}] {obj.name}\r\n                                        </li>)\r\n                                })\r\n                            }\r\n                            <ul className=\"pagination pagination-md mt-2 mb-2 justify-content-center\">\r\n                                <li className=\"page-item\">\r\n                                    <button onClick={() => this.Prev()} className=\"page-link\">&lt;</button>\r\n                                </li>\r\n                                {this.Pagination()}\r\n                                <li className=\"page-item\">\r\n                                    <button onClick={() => this.Next()} className=\"page-link\">&gt;</button>\r\n                                </li>\r\n                            </ul>\r\n                        </React.Fragment> : <Spinner/>}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ItemList)\r\n","import ItemList from './item-list';\r\n\r\nexport default ItemList;\r\n","import React, {Component} from 'react';\r\n\r\nimport './starship-details.css';\r\nimport SwapiService from \"../../services/swapi\";\r\nimport Spinner from \"../spinner\";\r\n\r\nexport default class StarShipDetails extends Component {\r\n    swapi = new SwapiService()\r\n\r\n    state = {\r\n        starship: {},\r\n        loading: true,\r\n    }\r\n\r\n    updateShip() {\r\n        this.setState({loading: true})\r\n        this.swapi.getData('starships', this.props.match.params.id).then((data) => {\r\n            this.setState({starship: data, loading: false})\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.id !== prevProps.match.params.id) {\r\n            this.updateShip()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateShip()\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            starship: {\r\n                name,\r\n                model,\r\n                manufacturer,\r\n                cost_in_credits,\r\n                length,\r\n                crew,\r\n                passengers,\r\n                cargo_capacity\r\n            }\r\n        } = this.state;\r\n        return (\r\n                <div className=\"starship-details card\">\r\n                    {!this.state.loading ?\r\n                        <React.Fragment>\r\n                            <img className=\"starship-image\"\r\n                                 src={`https://starwars-visualguide.com/assets/img/starships/${this.props.match.params.id}.jpg`}\r\n                                 onError={(event) => event.target.style.display = \"none\"}\r\n                                 alt='Starship: 404 not found'/>\r\n                            <div className=\"card-body\">\r\n                                <h4>{name}</h4>\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"term\">Model</span>\r\n                                        <span>{model}</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"term\">Manufacturer</span>\r\n                                        <span>{manufacturer}</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"term\">Cost in Credits</span>\r\n                                        <span>{cost_in_credits}</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"term\">Length</span>\r\n                                        <span>{length}</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"term\">Crew</span>\r\n                                        <span>{crew}</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"term\">Passengers</span>\r\n                                        <span>{passengers}</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"term\">Cargo Capacity</span>\r\n                                        <span>{cargo_capacity}</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </React.Fragment> : <Spinner/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import PersonDetails from './person-details';\r\n\r\nexport default PersonDetails;\r\n","import React, {Component} from 'react';\r\n\r\nimport './person-details.css';\r\nimport SwapiService from \"../../services/swapi\";\r\nimport Spinner from \"../spinner\";\r\n\r\nexport default class PersonDetails extends Component {\r\n    swapi = new SwapiService()\r\n\r\n    state = {\r\n        person: {},\r\n        loading: true,\r\n    }\r\n\r\n    updatePerson() {\r\n        this.setState({loading: true})\r\n        this.swapi.getData('people', this.props.match.params.id).then((data) => {\r\n            this.setState({person: data, loading: false})\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.id !== prevProps.match.params.id) {\r\n            this.updatePerson()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePerson()\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            person: {\r\n                name,\r\n                gender,\r\n                birth_year,\r\n                eye_color\r\n            }\r\n        } = this.state;\r\n        return (\r\n                <div className=\"person-details card\">\r\n                    {!this.state.loading ?\r\n                        <React.Fragment>\r\n                            <img className=\"person-image\"\r\n                                 src={`https://starwars-visualguide.com/assets/img/characters/${this.props.match.params.id}.jpg`}\r\n                                 onError={(event) => event.target.style.display = \"none\"}\r\n                                 alt='Person: 404 not found'/>\r\n                            <div className=\"card-body\">\r\n                                <h4>{name}</h4>\r\n                                <ul className=\"list-group list-group-flush\">\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"term\">Gender</span>\r\n                                        <span>{gender}</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"term\">Birth Year</span>\r\n                                        <span>{birth_year}</span>\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        <span className=\"term\">Eye Color</span>\r\n                                        <span>{eye_color}</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </React.Fragment> : <Spinner/>}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './planet-details.css';\r\nimport SwapiService from \"../../services/swapi\";\r\nimport Spinner from \"../spinner\";\r\n\r\nexport default class PlanetDetails extends Component {\r\n    swapi = new SwapiService()\r\n\r\n    state = {\r\n        planet: {},\r\n        loading: true,\r\n    }\r\n\r\n    updatePlanet() {\r\n        this.setState({loading: true})\r\n        this.swapi.getData('planets', this.props.match.params.id).then((data) => {\r\n            this.setState({planet: data, loading: false})\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.id !== prevProps.match.params.id) {\r\n            this.updatePlanet()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePlanet()\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            planet: {\r\n                name,\r\n                population,\r\n                rotation_period,\r\n                diameter,\r\n            }\r\n        } = this.state;\r\n        return (\r\n            <div className=\"planet-details card\">\r\n                {!this.state.loading ?\r\n                    <React.Fragment>\r\n                        <img className=\"planet-image\"\r\n                             src={`https://starwars-visualguide.com/assets/img/planets/${this.props.match.params.id}.jpg`}\r\n                             onError={(event) => event.target.style.display = \"none\"}\r\n                             alt='Planet: 404 not found'/>\r\n                        <div className=\"card-body\">\r\n                            <h4>{name}</h4>\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                <li className=\"list-group-item\">\r\n                                    <span className=\"term\">Population</span>\r\n                                    <span>{population}</span>\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    <span className=\"term\">Rotation Period</span>\r\n                                    <span>{rotation_period}</span>\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    <span className=\"term\">Diameter</span>\r\n                                    <span>{diameter}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </React.Fragment> : <Spinner/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Header from '../header';\r\nimport RandomPlanet from '../random-planet';\r\nimport ItemList from '../item-list';\r\n\r\nimport './app.css';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport StarShipDetails from \"../starship-details/starship-details\";\r\nimport PersonDetails from \"../person-details\";\r\nimport PlanetDetails from \"../planet-details/planet-details\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='container-fluid'>\r\n            <Header/>\r\n            <RandomPlanet/>\r\n            <div className=\"row mb2\">\r\n                <Switch>\r\n                    <Route\r\n                        path={[`/starships/:id`, `/people/:id`, `/planets/:id`]}\r\n                        component={ItemList}/>\r\n                    <Redirect from={'*'} to={`/people/1`}/>\r\n                </Switch>\r\n                <div className=\"col-md-6\">\r\n                    <Switch>\r\n                        <Route path={`/starships/:id`} component={StarShipDetails}/>\r\n                        <Route path={`/people/:id`} component={PersonDetails}/>\r\n                        <Route path={`/planets/:id`} component={PlanetDetails}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.css'\nimport App from './components/app';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}